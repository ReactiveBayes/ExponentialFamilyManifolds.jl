using SpecialFunctions
using ExponentialFamily

function partial_metric_tuple(::Type{NormalGamma}, ::NaturalParametersSpace, η1, η2, η3, η4)
    ((+)((/)((*)((*)(-8.0, (/)((*)(2, (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2)))), η1), 4.0), (*)(0.25, (+)((/)((*)((*)(-16.0, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), (*)((*)(-8.0, (+)((/)((*)(2, (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), (/)((*)((*)((*)((*)(-64.0, (/)((*)((*)(2, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4)), (^)(η2, 4)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), η1), η2), 4.0))), η1)))), (+)((/)((*)((*)((*)(-2, (+)((/)((*)(8.0, η1), (*)(4.0, η2)), (/)((*)(-32.0, η1), (*)(16.0, η2)))), η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), (*)((+)((*)(-4.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (*)((*)(16.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), η2)), (+)((/)((*)(2, (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), (/)((*)((*)((*)((*)(-64.0, (/)((*)((*)(2, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4)), (^)(η2, 4)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), η1), η2), 4.0)))), (+)((/)(-2, (*)((*)(4.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), η2)), (/)((*)((*)(-8.0, (/)((*)(-2, η1), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2)))), η1), 4.0)), (*)((*)(4.0, (+)((/)((*)(2, (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), (/)((*)((*)((*)((*)(-64.0, (/)((*)((*)(2, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4)), (^)(η2, 4)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), η1), η2), 4.0))), η2), (+)((/)((*)((*)((*)(-2, (+)((/)((*)(8.0, η1), (*)(4.0, η2)), (/)((*)(-32.0, η1), (*)(16.0, η2)))), η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), (*)((+)((*)(-4.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (*)((*)(16.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), η2)), (+)((/)((*)(2, (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), (/)((*)((*)((*)((*)(-64.0, (/)((*)((*)(2, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4)), (^)(η2, 4)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), η1), η2), 4.0)))), (+)((+)((+)((/)((*)((*)(-2, (/)((*)((*)((*)(128.0, (/)((^)(η1, 2), (*)(256.0, (^)(η2, 4)))), η2), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2))), η1), (*)(4.0, η2)), (/)((*)((*)(4.0, (+)((/)((*)((*)((*)(-4, (/)((*)((*)(-4.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), η1), (*)(4.0, η2)), (/)((*)((*)(-8.0, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))))), (^)(η1, 2)), (*)(16.0, (^)(η2, 2)))), (/)((*)((*)(256.0, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (^)(η2, 3)))), (/)((*)((*)((*)(-32.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2)))), (+)((/)((*)(8.0, η1), (*)((*)(16.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (^)(η2, 2))), (/)((*)((*)((*)(-32.0, (/)((*)(4.0, (^)(η1, 2)), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 4)))), η1), η2), 4.0)), (+)((/)((*)((*)((*)(-4, (/)((*)((*)(-4.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), η1), (*)(4.0, η2)), (/)((*)((*)(-8.0, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2)))), (+)((/)(-2, (*)((*)(4.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), η2)), (/)((*)((*)(-8.0, (/)((*)(-2, η1), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2)))), η1), 4.0)), (+)((/)((*)(8.0, η1), (*)((*)(16.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (^)(η2, 2))), (/)((*)((*)((*)(-32.0, (/)((*)(4.0, (^)(η1, 2)), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 4)))), η1), η2), 4.0)), 0, (/)((*)((*)(-2, (/)(1, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2))), η1), (*)(4.0, η2)), (*)((*)(4.0, (+)((/)((*)(2, (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), (/)((*)((*)((*)((*)(-64.0, (/)((*)((*)(2, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4)), (^)(η2, 4)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), η1), η2), 4.0))), η2), (+)((/)((*)((*)((*)(-4, (/)((*)((*)(-4.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), η1), (*)(4.0, η2)), (/)((*)((*)(-8.0, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2)))), (/)((*)((*)(-2, (/)(1, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2))), η1), (*)(4.0, η2)), (/)((*)((*)((*)(-4, (/)((+)(0.5, η3), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), η1), (*)(4.0, η2)), (+)((*)((*)(-1, (+)((*)(4.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (*)((*)(-16.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), η2))), (/)((*)(2, (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2)))), (*)((*)((*)(2.0, (+)((*)((*)(32.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), η2), (*)((*)((*)(-128.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (^)(η2, 2)))), (/)((*)((*)(2, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4)), (^)(η2, 4)))), η1)), (+)((/)((*)((*)((*)(-2, (+)((+)((/)((*)(-16.0, (^)(η1, 2)), (*)(16.0, (^)(η2, 2))), (/)((*)(-16.0, (^)(η1, 2)), (*)(16.0, (^)(η2, 2)))), (*)((*)(512.0, (/)((^)(η1, 2), (*)(256.0, (^)(η2, 4)))), (^)(η2, 2)))), η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), (*)((*)((*)(-1, (+)((*)((*)(32.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), η2), (*)((*)((*)(-128.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (^)(η2, 2)))), (+)((*)(-4.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (*)((*)(16.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), η2))), (/)((*)((*)(2, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4)), (^)(η2, 4))))), (*)((*)(-1, (+)((*)(4.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (*)((*)(-16.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), η2))), (/)((*)(-2, η1), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2)))), (+)((/)((*)((*)(8.0, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), (*)((*)((*)(-4.0, (+)((*)((*)(32.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), η2), (*)((*)((*)(-128.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (^)(η2, 2)))), (/)((*)((*)(2, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4)), (^)(η2, 4)))), η2)), (+)((/)((*)((*)((*)(-2, (+)((+)((/)((*)(-16.0, (^)(η1, 2)), (*)(16.0, (^)(η2, 2))), (/)((*)(-16.0, (^)(η1, 2)), (*)(16.0, (^)(η2, 2)))), (*)((*)(512.0, (/)((^)(η1, 2), (*)(256.0, (^)(η2, 4)))), (^)(η2, 2)))), η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), (*)((*)((*)(-1, (+)((*)((*)(32.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), η2), (*)((*)((*)(-128.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (^)(η2, 2)))), (+)((*)(-4.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (*)((*)(16.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), η2))), (/)((*)((*)(2, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4)), (^)(η2, 4))))), (+)((+)((+)((+)((/)((+)((/)((*)((*)(128.0, (^)(η1, 2)), (+)(-0.5, (*)(-1, η3))), (*)(256.0, (^)(η2, 4))), (*)((*)((*)(-131072.0, (/)((^)(η1, 2), (*)(65536.0, (^)(η2, 8)))), (^)(η2, 4)), (+)(-0.5, (*)(-1, η3)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (/)((*)((*)(4.0, (+)((/)((*)((*)((*)(128.0, (/)((^)(η1, 2), (*)(256.0, (^)(η2, 4)))), η2), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (*)((*)((*)(8.0, (/)((*)((*)(-4.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4))), (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))))), (^)(η1, 2)), (*)(16.0, (^)(η2, 2)))), (/)((*)((*)((*)((*)(512.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (/)((^)(η1, 2), (*)(256.0, (^)(η2, 4)))), η2), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2))), (*)((*)(4.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (/)((*)((*)((*)(128.0, (/)((^)(η1, 2), (*)(256.0, (^)(η2, 4)))), η2), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)))), (*)((*)(-8.0, (/)(2.0, (*)(16.0, (^)(η2, 4)))), η2)), (*)((*)(-1, (/)((*)(4.0, (^)(η1, 2)), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 4)))), (+)((*)((*)(32.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), η2), (*)((*)(-64.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (^)(η2, 2)))), (+)((/)((*)((*)((*)(128.0, (/)((^)(η1, 2), (*)(256.0, (^)(η2, 4)))), η2), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (*)((*)((*)(8.0, (/)((*)((*)(-4.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4))), (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)))), (*)((*)(-1, (+)((*)(4.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (*)((*)(-16.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), η2))), (/)((*)(-2, η1), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2)))), (*)((*)(-1, (/)((*)(4.0, (^)(η1, 2)), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 4)))), (+)((*)((*)(32.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), η2), (*)((*)(-64.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (^)(η2, 2)))), 0, (*)((*)(4.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (/)(1, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2))), (+)((/)((*)((*)(8.0, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), (*)((*)((*)(-4.0, (+)((*)((*)(32.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), η2), (*)((*)((*)(-128.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (^)(η2, 2)))), (/)((*)((*)(2, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4)), (^)(η2, 4)))), η2)), (+)((/)((*)((*)((*)(128.0, (/)((^)(η1, 2), (*)(256.0, (^)(η2, 4)))), η2), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (*)((*)((*)(8.0, (/)((*)((*)(-4.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4))), (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)))), (*)((*)(4.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (/)(1, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2))), (*)((*)((*)(8.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (/)((+)(0.5, η3), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (+)((/)(-2, (*)((*)(4.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), η2)), (/)((*)(4.0, (^)(η1, 2)), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2)))), (/)((*)((*)(-2, (+)((*)(-4.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (*)((*)(16.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), η2))), η1), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), 0, (/)((*)(-8.0, η1), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), η2)), (/)((*)((*)(-2, (+)((*)(-4.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (*)((*)(16.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), η2))), η1), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), (+)((/)((*)(16.0, (^)(η1, 4)), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 4))), (/)((*)(-128.0, (^)(η1, 2)), (*)((*)(256.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (^)(η2, 3)))), 0, (/)((*)(4.0, (^)(η1, 2)), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), 0, 0, (SpecialFunctions.polygamma)(2, (+)(0.5, η3)), 0, (/)((*)(-8.0, η1), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), η2)), (/)((*)(4.0, (^)(η1, 2)), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), 0, (/)(1, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (+)((*)((*)(4.0, (/)((*)(2, (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2)))), η2), (*)((*)((*)((*)(-64.0, (/)((*)((*)(2, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4)), (^)(η2, 4)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), η1), (^)(η2, 2))), (+)((/)((*)((*)(8.0, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), (*)((*)((*)((*)(32.0, (+)((*)(-4.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (*)((*)(16.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), η2))), (/)((*)((*)(2, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4)), (^)(η2, 4)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (^)(η2, 2))), (*)((*)(4.0, (/)((*)(-2, η1), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2)))), η2), (*)((*)((*)(128.0, (/)((*)((*)(2, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4)), (^)(η2, 4)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (^)(η2, 3)), (+)((/)((*)((*)(8.0, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2))), (*)((*)((*)((*)(32.0, (+)((*)(-4.0, (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (*)((*)(16.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), η2))), (/)((*)((*)(2, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4)), (^)(η2, 4)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (^)(η2, 2))), (+)((/)((*)((*)((*)(8.0, (/)((*)((*)(-4.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (^)(η1, 2)), (*)(16.0, (^)(η2, 2))), (/)((*)((*)((*)(128.0, (/)((^)(η1, 2), (*)(256.0, (^)(η2, 4)))), η2), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2))), (*)((*)(16.0, (/)((*)(4.0, (^)(η1, 2)), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 4)))), (^)(η2, 2)), (*)((*)(2, (/)((*)((*)(-4.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (*)((*)(4.0, (/)((*)(-2, η1), (*)((*)(16.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 2)))), η2), (*)((*)(16.0, (/)((*)(4.0, (^)(η1, 2)), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (^)(η2, 4)))), (^)(η2, 2)), 0, (/)(1, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (*)((*)((*)(128.0, (/)((*)((*)(2, η1), (+)(-0.5, (*)(-1, η3))), (*)((*)(256.0, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4)), (^)(η2, 4)))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (^)(η2, 3)), (*)((*)(2, (/)((*)((*)(-4.0, (/)((^)(η1, 2), (*)(16.0, (^)(η2, 2)))), (+)(-0.5, (*)(-1, η3))), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))), (/)(1, (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 2)), (*)((*)(2, (/)((+)(0.5, η3), (^)((+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4)), 4))), (+)((/)((^)(η1, 2), (*)(4.0, η2)), (*)(-1, η4))))
end

function partial_metric(T::Type{NormalGamma}, S::NaturalParametersSpace, η)
    tup64 = partial_metric_tuple(T, S, η[1], η[2], η[3], η[4])
    return reshape(collect(tup64), 4, 4, 4)
end
